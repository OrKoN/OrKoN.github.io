<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Web 0.0]]></title>
  <link href="http://OrKoN.github.io/atom.xml" rel="self"/>
  <link href="http://OrKoN.github.io/"/>
  <updated>2014-09-27T10:27:54+02:00</updated>
  <id>http://OrKoN.github.io/</id>
  <author>
    <name><![CDATA[Alex Rudenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting Up SMTP Relay Using Postfix on Ubuntu 14.04]]></title>
    <link href="http://OrKoN.github.io/2014/09/21/setting-up-smtp-relay-using-postfix-on-ubuntu-14-dot-04/"/>
    <updated>2014-09-21T10:33:50+02:00</updated>
    <id>http://OrKoN.github.io/2014/09/21/setting-up-smtp-relay-using-postfix-on-ubuntu-14-dot-04</id>
    <content type="html"><![CDATA[<p>This is a small script to setup Postfix relay server on Ubuntu 14.04:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">	postconf -e <span class="s1">&#39;relayhost = smtp.example.com&#39;</span>
</span><span class="line">	postconf -e <span class="s1">&#39;smtp_sasl_auth_enable = yes&#39;</span>
</span><span class="line">	postconf -e <span class="s1">&#39;smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd&#39;</span>
</span><span class="line">	postconf -e <span class="s1">&#39;smtp_sasl_security_options =&#39;</span>
</span><span class="line">	<span class="nb">read</span> -e -p <span class="s2">&quot;Password: &quot;</span> mail_pass
</span><span class="line">	<span class="nb">echo</span> <span class="s2">&quot;smtp.example.com  mail@example.com:$mail_pass&quot;</span> &gt; /etc/postfix/sasl_passwd
</span><span class="line">	chown root:root /etc/postfix/sasl_passwd
</span><span class="line">	chmod <span class="m">600</span> /etc/postfix/sasl_passwd
</span><span class="line">	postmap /etc/postfix/sasl_passwd
</span><span class="line">	/etc/init.d/postfix restart
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Replace smtp.example.com with your SMTP server host name and mail@example.com with your mailbox. The script should prompt you to enter the password for the mailbox.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Non-interactive SSH Login Using Password]]></title>
    <link href="http://OrKoN.github.io/2014/09/21/non-interactive-ssh-login-using-password/"/>
    <updated>2014-09-21T10:05:46+02:00</updated>
    <id>http://OrKoN.github.io/2014/09/21/non-interactive-ssh-login-using-password</id>
    <content type="html"><![CDATA[<p>Sometimes it’s handy to automate some remote tasks. It’s good if there is key authentication set up, but what if only the login by password is avaiable. In this case, if you run a command like “ssh root@my.srv” you’ll be prompted to type in the password.</p>

<p>You can avoid the prompty by providing the password using the sshpass app:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo apt-get install sshpass</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It works with ssh and scp commands like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sshpass -p password ssh ..goes normal ssh parameters..
</span><span class="line">sshpass -p password scp ..source.. ..dest..</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning VCL: How to Build a VCL Component Demo]]></title>
    <link href="http://OrKoN.github.io/2014/09/21/learning-vcl-how-to-build-a-vcl-component-demo/"/>
    <updated>2014-09-21T09:21:08+02:00</updated>
    <id>http://OrKoN.github.io/2014/09/21/learning-vcl-how-to-build-a-vcl-component-demo</id>
    <content type="html"><![CDATA[<p>In my previous post, I described how to get started with the VCL. VCL is a highly modular CSS framework and unfortunately it does not have a demo/documentation page at the moment so it may be hard to guess how to use a particular component or how it looks like. So in this blog post, I will explain how to build the demo example for a VCL component. I will use the gallery component as an example.</p>

<ol>
  <li>Make sure you have the recent version of the VCL gallery component:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd vcl/gallery
</span><span class="line">git checkout master
</span><span class="line">git pull</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>Install node modules required to generate the demo:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">npm install</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>Make sure you have the node 0.10.* installed because the generation of examples fails for nodejs 0.11.* due to an issue in the connect module:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">n 0.10.32</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>Generate the demo:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">npm test</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This will start a local web server and it will open the example page in the browser. By default, http://localhost:8000/example.html should be opened:</p>

<p><img class="right" src="http://OrKoN.github.io/downloads/gallery.png" title="'VCL Gallery Component'" /></p>

<p>If you navigate to the root http://localhost:8000/, you’ll see all available examples for the component.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting FLV to MP4 With Ubuntu Linux and Avconv]]></title>
    <link href="http://OrKoN.github.io/2014/09/21/converting-flv-to-mp4-with-ubuntu-linux-and-avconv/"/>
    <updated>2014-09-21T09:12:01+02:00</updated>
    <id>http://OrKoN.github.io/2014/09/21/converting-flv-to-mp4-with-ubuntu-linux-and-avconv</id>
    <content type="html"><![CDATA[<p>The FLV files aren’t good for everything. Therefore, one my want to convert an FLV file to an MP4 file. This can be done simply by using the avconv tool:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">avconv -i video.flv -codec copy video.mp4</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The resulting video will have the same quality as original FLV because the codec “copy” was used. If you don’t have the avconv installed, install the libav-tools package to get it:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">apt-get install libav-tools</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extending Your Ubuntu Desktop With Custom Indicator Applets Using Python3]]></title>
    <link href="http://OrKoN.github.io/2014/08/31/extending-your-ubuntu-desktop-with-custom-indicator-applets-using-python3/"/>
    <updated>2014-08-31T13:37:34+02:00</updated>
    <id>http://OrKoN.github.io/2014/08/31/extending-your-ubuntu-desktop-with-custom-indicator-applets-using-python3</id>
    <content type="html"><![CDATA[<p>In this blog post, I will explain how to develop your own indicator applet for the Ubuntu’s Unity desktop. The applet will reside in the top panel. The applet icon will indicate a state we’ll be monitoring. On a click on the icon, a menu will be presented which will allow changing the state.</p>

<p>Before I start digging into the implementation details, I would like to elaborate on why one may need to develop his own indicator applet:</p>
<ul>
 <li> monitor web sites or web services. E.g. notify you when there are new messages in your gmail account </li>
 <li> monitor and control local filesystem. E.g. notify you when a certain configuration setting changes</li>
 <li> anything else that you want to be shown in the top panel</li>
</ul>

<h2>Goal</h2>

<p>In this blog post, we’ll develop an applet that monitors a website (http://habrahabr.ru) and notifies you if the website’s content has been changed. In order to detect that the content has been changed the applet will calculate a md5 hash of the content and will compare it with the current hash every 60 seconds. Of course, this may not be too usefull since the changes of the entire page does not necessarily mean that the actual content (e.g. articles) was changed. This may be improved by extracting a meaningful part of the web page and calculating the md5 hash of it only.</p>

<h2>Requirements</h2>

<p>In order to launch an indicator applet, you will need:</p>
<ol>
 <li>GTK+3</li>
 <li>Python3</li>
 <li>libappindicator</li>
</ol>

<p>All of these are available in Ubuntu’s repositories: 
apt-get install python3 libgtk-3-0 python-appindicator</p>

<h2>Development</h2>

<p>Let’s create a python file and call it indicator.py. First, let’s define that it’s a python3 executable:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/usr/bin/env python3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then let’s import the libraries that we need:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">urllib.request</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">hashlib</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">lxml.html</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">Gtk</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">AppIndicator3</span> <span class="k">as</span> <span class="n">appindicator</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GLib</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Our main class will be called MyIndicator. It will have several methods. The first one is called <strong>init</strong> and in this method we will actually configure the application applet:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="python"><span class="line">  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span> <span class="o">=</span> <span class="n">appindicator</span><span class="o">.</span><span class="n">Indicator</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class="line">                <span class="s">&quot;Test&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s">&quot;indicator-messages&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorCategory</span><span class="o">.</span><span class="n">APPLICATION_STATUS</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_status</span> <span class="p">(</span><span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorStatus</span><span class="o">.</span><span class="n">ACTIVE</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_attention_icon</span><span class="p">(</span><span class="s">&quot;new-messages-red&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">Menu</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="n">item</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">MenuItem</span><span class="p">()</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">&quot;Clear&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;activate&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">clear</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="n">item</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">MenuItem</span><span class="p">()</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">&quot;Exit&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;activate&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">quit</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">show_all</span><span class="p">()</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_menu</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The main method will check the website and then it will launch the applet:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line">  <span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">check_site</span><span class="p">()</span>
</span><span class="line">    <span class="n">GLib</span><span class="o">.</span><span class="n">timeout_add_seconds</span><span class="p">(</span><span class="mi">60</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_site</span><span class="p">)</span>
</span><span class="line">    <span class="n">Gtk</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The check_site method will actually do the job of checking the website and telling if the content has changed. The icon of the applet is changed to the red one by changing the status of the indicator to ATTENTION. The icon for the attention state was previously defined in the <strong>init</strong> method using set_attention_icon(“new-messages-red”) method.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="python"><span class="line">  <span class="k">def</span> <span class="nf">check_site</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="n">remote_data</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://habrahabr.ru&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="n">remote_data</span><span class="p">)</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">==</span> <span class="s">&#39;&#39;</span><span class="p">:</span>
</span><span class="line">      <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;======INITIAL======&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;======TRIGGERED=======&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Local hash: &quot;</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span><span class="p">)</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Remote hash: &quot;</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">)</span>
</span><span class="line">      <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">:</span>
</span><span class="line">        <span class="k">print</span><span class="p">(</span><span class="s">&quot;======ATTENTION=======&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_status</span><span class="p">(</span><span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorStatus</span><span class="o">.</span><span class="n">ATTENTION</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The quit method is called when an user clicks on the Quit menu item of the indicator:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line">  <span class="k">def</span> <span class="nf">quit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
</span><span class="line">    <span class="n">Gtk</span><span class="o">.</span><span class="n">main_quit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>And finally the main function of the program:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">indicator</span> <span class="o">=</span> <span class="n">MyIndicator</span><span class="p">();</span>
</span><span class="line">  <span class="n">indicator</span><span class="o">.</span><span class="n">main</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The complete source code is below:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>&#8220;indicator.py&#8221;  (indicator.py)</span> <a href="http://OrKoN.github.io/downloads/code/indicator.py">download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/env python3</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">urllib.request</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">hashlib</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">lxml.html</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">Gtk</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">AppIndicator3</span> <span class="k">as</span> <span class="n">appindicator</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">gi.repository</span> <span class="kn">import</span> <span class="n">GLib</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MyIndicator</span><span class="p">:</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span> <span class="o">=</span> <span class="n">appindicator</span><span class="o">.</span><span class="n">Indicator</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class="line">                <span class="s">&quot;Test&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s">&quot;indicator-messages&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorCategory</span><span class="o">.</span><span class="n">APPLICATION_STATUS</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_status</span> <span class="p">(</span><span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorStatus</span><span class="o">.</span><span class="n">ACTIVE</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_attention_icon</span><span class="p">(</span><span class="s">&quot;new-messages-red&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">Menu</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="n">item</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">MenuItem</span><span class="p">()</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">&quot;Clear&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;activate&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">clear</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="n">item</span> <span class="o">=</span> <span class="n">Gtk</span><span class="o">.</span><span class="n">MenuItem</span><span class="p">()</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">&quot;Exit&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="n">item</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;activate&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">quit</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="o">.</span><span class="n">show_all</span><span class="p">()</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_menu</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">menu</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">check_site</span><span class="p">()</span>
</span><span class="line">    <span class="n">GLib</span><span class="o">.</span><span class="n">timeout_add_seconds</span><span class="p">(</span><span class="mi">60</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_site</span><span class="p">)</span>
</span><span class="line">    <span class="n">Gtk</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">clear</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_status</span><span class="p">(</span><span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorStatus</span><span class="o">.</span><span class="n">ACTIVE</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">check_site</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">    <span class="n">remote_data</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://habrahabr.ru&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="n">remote_data</span><span class="p">)</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">==</span> <span class="s">&#39;&#39;</span><span class="p">:</span>
</span><span class="line">      <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;======INITIAL======&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;======TRIGGERED=======&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Local hash: &quot;</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span><span class="p">)</span>
</span><span class="line">      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Remote hash: &quot;</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">)</span>
</span><span class="line">      <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">remote_hash</span><span class="p">:</span>
</span><span class="line">        <span class="k">print</span><span class="p">(</span><span class="s">&quot;======ATTENTION=======&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">ind</span><span class="o">.</span><span class="n">set_status</span><span class="p">(</span><span class="n">appindicator</span><span class="o">.</span><span class="n">IndicatorStatus</span><span class="o">.</span><span class="n">ATTENTION</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">quit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
</span><span class="line">    <span class="n">Gtk</span><span class="o">.</span><span class="n">main_quit</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="n">indicator</span> <span class="o">=</span> <span class="n">MyIndicator</span><span class="p">();</span>
</span><span class="line">  <span class="n">indicator</span><span class="o">.</span><span class="n">main</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2> Execution </h2>

<p>First, let’s make indicator.py executable by running: chmod a+x indicator.py. Then we can execute it: ./indicator.py .
The applet should appear in the top panel. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With a New CSS Framework Called Visual Component Library (VCL)]]></title>
    <link href="http://OrKoN.github.io/2014/08/18/getting-started-with-a-new-css-framework-called-visual-component-library-vcl/"/>
    <updated>2014-08-18T23:01:00+02:00</updated>
    <id>http://OrKoN.github.io/2014/08/18/getting-started-with-a-new-css-framework-called-visual-component-library-vcl</id>
    <content type="html"><![CDATA[<h2> Introduction </h2>
<p>
In this post I will introduce a new CSS framework called VCL that provides a plenty of highly reusable and modular CSS components which work together nicely. The VCL stands for Visual Component Library and it aims at solving very similar problems as Twitter Bootstrap. I will show how to get started with VCL using a page of a simple web blog as an example. The resulting web page will look as shown in the next image. As you can see it has very simple and minimalistic design.
</p>

<p><img class="right" src="http://OrKoN.github.io/images/blog_vcl.png" title="'Resulting page created with VCL'" /></p>

<h2>About VCL</h2>
<p>
The VCL documentation as well as the source code is available on <a href="https://github.com/vcl/doc">GitHub</a>. A meta repository for all VCL modules is available <a href="https://github.com/vcl/vcl">here</a>.
</p>
<h2>Requirements</h2>

<p>
You will need a current version of NodeJS (I use 0.11.13) and NPM installed because all VCL modules are published as NPM modules. Also you will need a HTTP web server such as Apache HTTP or Nginx.
</p>
<h2>Building your own VCL distribution</h2>

<ol>
  <li>
	First, download a template which I prepared for this tutorial from <a href="http://OrKoN.github.io/downloads/vcl_template.zip">here</a>. It&#8217;s a zip archive so extract it to any folder. I will use `~/myvcl`.
  </li>
  <li>
	As you can see the folder contains several files and a folder: <ul>
		<li><em>fonts</em> folder is just a copy of fonts from <a href="http://fortawesome.github.io/Font-Awesome/">FontAwesome</a></li>
		<li><em>index.styl</em> is the main script that defines how other VCL modules are processed</li>
		<li><em>package.json</em> is a description of the VCL distro containing references to all needed VCL modules</li>
		<li><em>vcl-override.styl</em> is a file where one can override default VCL styles</li>
		<li><em>vcl-theme-terms.styl</em> is a file where one can define some variables which may used later on in the styles. For instance, colors. </li>
		<li><em>vcl-var-override.styl</em> is a file where variables exposed by the VCL modules can be defined </li>
	</ul>
  </li>
  <li>
 	Open a terminal and execute &#8220;npm install&#8221; from the `~/myvcl` folder. After that a node_modules folder will appear in `~/myvcl` which will contain all available VCL modules.
  </li>
  <li>
	From the `~/myvcl` folder run the VCL preporcessor to build your VCL distro: <div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"> node ./node_modules/vcl-preprocessor/bin/vcl.js index.styl compiled.css
</span></code></pre></td></tr></table></div></figure></notextile></div>You should see &#8220;✔ Succesfully compiled input to compiled.css&#8221; in the terminal if everything is fine.
  </li>
</ol>
<h2>Designing a page with VCL</h2>
<ol>
  <li>Now when we have a compiled version of VCL. We can start designing a blog page. First, let&#8217;s create a folder within the HTTP web server&#8217;s root folder and copy <em>compiled.css</em> in there and the <em>fonts</em> folder into the parent folder. I use Apache HTTP server. Its root folder is /var/www and I create a folder /var/www/vcl_blog/public. So I can access it via a web browser at http://localhost/vcl_blog/public/.
  </li>
  <li>In the /var/www/vcl_blog/public/ folder create a file called <em>index.html</em> and place the following content in there:
	<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>&#8220;index.html&#8221;  (index.html)</span> <a href="http://OrKoN.github.io/downloads/code/index.html">download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!doctype html&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">  <span class="nt">&lt;title&gt;</span>VCL Blog<span class="nt">&lt;/title&gt;</span>
</span><span class="line">  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;compiled.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line">  <span class="c">&lt;!--[if lt IE 9]&gt;</span>
</span><span class="line"><span class="c">  &lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="c">  &lt;![endif]--&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridRow vclVAlignMiddle&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridSpan-3 vclAlignCentered&quot;</span><span class="nt">&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;&lt;h1&gt;</span> VCL blog <span class="nt">&lt;/h1&gt;&lt;/a&gt;&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridSpan-12&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;nav</span> <span class="na">id=</span><span class="s">&quot;nav&quot;</span> <span class="na">class=</span><span class="s">&quot;vclHorizontalNav vclHorizontalNavLight&quot;</span> <span class="na">role=</span><span class="s">&quot;navigation&quot;</span><span class="nt">&gt;&lt;ul&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>About Me
</span><span class="line">            <span class="nt">&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Posts
</span><span class="line">            <span class="nt">&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Portfolio
</span><span class="line">            <span class="nt">&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Contact
</span><span class="line">            <span class="nt">&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">      <span class="nt">&lt;/ul&gt;</span>
</span><span class="line">      <span class="nt">&lt;/nav&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">  <span class="nt">&lt;/div&gt;</span>
</span><span class="line">  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridRow&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridSpan-3 vclAlignCentered&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;h2&gt;</span>Recent blog posts<span class="nt">&lt;/h2&gt;</span>
</span><span class="line">      <span class="nt">&lt;nav</span> <span class="na">id=</span><span class="s">&quot;nav&quot;</span> <span class="na">class=</span><span class="s">&quot;vclTreeNav vclTreeNavLight&quot;</span> <span class="na">role=</span><span class="s">&quot;navigation&quot;</span><span class="nt">&gt;&lt;ul&gt;</span>
</span><span class="line">        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;vclAlignLeft&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Blog post # 1
</span><span class="line">           <span class="nt">&lt;span&gt;</span>by Alex<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;vclAlignLeft&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Blog post # 2
</span><span class="line">            <span class="nt">&lt;span&gt;</span>by Alex<span class="nt">&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;vclAlignLeft&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Blog post # 3
</span><span class="line">            <span class="nt">&lt;span&gt;</span>by Alex<span class="nt">&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;vclAlignLeft&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Blog post # 4
</span><span class="line">            <span class="nt">&lt;span&gt;</span>by Alex<span class="nt">&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/li&gt;</span>
</span><span class="line">      <span class="nt">&lt;/ul&gt;</span>
</span><span class="line">      <span class="nt">&lt;/nav&gt;</span>
</span><span class="line">      <span class="nt">&lt;h2&gt;</span>Blog search<span class="nt">&lt;/h2&gt;</span>
</span><span class="line">     	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclInputGroup&quot;</span><span class="nt">&gt;</span>
</span><span class="line">	  <span class="nt">&lt;input</span> <span class="na">autocomplete=</span><span class="s">&quot;off&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>
</span><span class="line">	  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;vclInputGroupButton&quot;</span><span class="nt">&gt;&lt;button</span> <span class="na">class=</span><span class="s">&quot;vclButtonStd vclSquare&quot;</span><span class="nt">&gt;&lt;span&gt;&lt;i</span> <span class="na">class=</span><span class="s">&quot;fa fa-search&quot;</span><span class="nt">&gt;&lt;/i&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;</span>
</span><span class="line">	<span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridSpan-12 vclAlignLeft&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;h2&gt;</span>Blog post # 1<span class="nt">&lt;/h2&gt;</span>
</span><span class="line">      <span class="nt">&lt;hr&gt;</span>
</span><span class="line">      <span class="nt">&lt;p&gt;</span>
</span><span class="line">      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed in metus a magna lacinia dapibus quis sit amet felis. Etiam id ante mi. In a justo ac ipsum pretium gravida sit amet ultrices urna. Sed tempor luctus bibendum. Donec consequat ipsum eu urna mattis, at vestibulum sem porta. Integer posuere placerat ante sed tristique. Maecenas adipiscing sapien sit amet massa sollicitudin, at lobortis ante vehicula. Proin sagittis orci ut pretium fermentum. Nunc eleifend massa ut tristique placerat. Proin hendrerit luctus dui sit amet tincidunt. Nam vel auctor arcu. Quisque sit amet orci ipsum. Integer laoreet fermentum nulla, eleifend dapibus odio tincidunt sed. Vestibulum ut augue et ante sagittis ullamcorper. Nullam at ligula vitae lacus molestie ullamcorper id ac mauris. Maecenas aliquam libero purus, et suscipit felis feugiat id.<span class="nt">&lt;/p&gt;&lt;p&gt;</span>
</span><span class="line">Sed posuere quam velit, quis consequat ante sagittis ac. Suspendisse non lectus id libero blandit volutpat. Nullam sagittis felis feugiat justo adipiscing, non volutpat elit ornare. Nunc dignissim mauris ac erat luctus rhoncus. Quisque vulputate purus turpis, luctus suscipit urna sollicitudin id. Aenean lacinia, erat at hendrerit interdum, mi nisl malesuada elit, quis mattis tellus felis in mi. Proin molestie neque ac augue adipiscing, vitae tempus ante tempor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec erat non augue ullamcorper bibendum.<span class="nt">&lt;/p&gt;&lt;p&gt;</span>
</span><span class="line">Phasellus vestibulum arcu sed arcu varius, dapibus eleifend velit pellentesque. Morbi risus nisl, rhoncus sit amet dui vel, pellentesque porttitor nibh. Proin vitae ullamcorper tortor, non cursus purus. Ut elementum varius turpis, nec placerat mi fringilla vitae. Vivamus semper mattis auctor. Nam scelerisque eget lacus non adipiscing. Duis vitae purus vulputate, laoreet velit et, sodales enim. Cras congue vulputate metus, eget pretium ligula ultrices nec. Curabitur eget justo at erat rutrum dignissim in id massa. Phasellus vehicula, nibh eget imperdiet vulputate, lacus elit sodales lorem, sagittis adipiscing dui risus vitae magna. Etiam pharetra interdum tortor, eu semper felis rhoncus in. Duis id tellus sagittis, eleifend libero eget, accumsan augue. Vivamus faucibus enim vitae orci tristique, tincidunt suscipit tellus porta. Fusce felis dui, scelerisque a rutrum vitae, lobortis et mauris. Fusce vel posuere lacus. Quisque laoreet, tellus nec adipiscing cursus, odio dui consequat felis, lobortis accumsan neque dui quis erat.<span class="nt">&lt;/p&gt;&lt;p&gt;</span>
</span><span class="line">Etiam commodo porttitor tellus quis fermentum. Donec lacinia magna tellus, at tempus sapien sodales in. Vestibulum scelerisque condimentum dui, lacinia convallis mi faucibus quis. Quisque nec mi aliquet, egestas turpis imperdiet, venenatis nisl. Proin vehicula ante neque, eget semper dui elementum ac. Pellentesque laoreet bibendum ultricies. Suspendisse et ullamcorper dolor. Nulla venenatis lacus mollis neque consectetur posuere. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent et diam sit amet ante facilisis dapibus non vitae nunc. In non diam mollis, cursus neque eu, consectetur nunc.<span class="nt">&lt;/p&gt;&lt;p&gt;</span>
</span><span class="line">Sed quis semper leo, vitae tristique sapien. Vivamus molestie rhoncus ultricies. Vestibulum id interdum est. Fusce non ultricies felis. In tempor placerat blandit. Sed eros est, feugiat eget semper ac, facilisis nec massa. Aenean et quam vel erat gravida suscipit.
</span><span class="line">      <span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">  <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridRow&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclGridSpan-15 vclAlignCentered&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      2014 (c) Alex Rudenko
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
  </li>
  <li>Basically, once you&#8217;ve done this you can open index.html in the browser (e.g. http://localhost/vcl_blog/public/index.html) and you&#8217;ll see the end result. But let me explain what&#8217;s written in the index.html
	<ul>
		<li>First, we include our compiled version of VCL using: <div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;compiled.css&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
		<li>Using the CSS class <em>vclGridRow</em> we define a new row of our layout. Class <em>vclVAlignMiddle</em> specifies the vertical alignment in the middle</li>
		<li>Using the CSS class <em>vclGridSpan-3</em> we define that the element will take 3/15 of the page width. This kind of classes is typical for fluid-grid CSS frameworks. The total width of the page is 15 as defined by VCL.</li>
		<li>We define a horizontal menu on the top of the page using the vclHorizontalNav class: <div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"> <span class="nt">&lt;nav</span> <span class="na">id=</span><span class="s">&quot;nav&quot;</span> <span class="na">class=</span><span class="s">&quot;vclHorizontalNav vclHorizontalNavLight&quot;</span> <span class="na">role=</span><span class="s">&quot;navigation&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> </li>
		<li>We define a tree (sidebar) navigation using the <em>vclTreeNav</em> class: <div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"> <span class="nt">&lt;nav</span> <span class="na">id=</span><span class="s">&quot;nav&quot;</span> <span class="na">class=</span><span class="s">&quot;vclTreeNav vclTreeNavLight&quot;</span> <span class="na">role=</span><span class="s">&quot;navigation&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> </li>
		<li>To define search box we use the vclInputGroup component: 
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;vclInputGroup&quot;</span><span class="nt">&gt;</span>
</span><span class="line">	  <span class="nt">&lt;input</span> <span class="na">autocomplete=</span><span class="s">&quot;off&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>
</span><span class="line">	  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;vclInputGroupButton&quot;</span><span class="nt">&gt;&lt;button</span> <span class="na">class=</span><span class="s">&quot;vclButtonStd vclSquare&quot;</span><span class="nt">&gt;&lt;span&gt;&lt;i</span> <span class="na">class=</span><span class="s">&quot;fa fa-search&quot;</span><span class="nt">&gt;&lt;/i&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;</span>
</span><span class="line">	<span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
		</li>
	</ul>
  </li>
</ol>
<p>
Now we&#8217;ve learned how to get started with VCL. Read more about properties and configuration options of each one of the VCL modules on <a href="https://github.com/vcl/vcl">GitHub</a>.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Development Studio: Create String Resource Automatically]]></title>
    <link href="http://OrKoN.github.io/2014/05/31/android-development-studio-create-string-resource-automatically/"/>
    <updated>2014-05-31T19:05:00+02:00</updated>
    <id>http://OrKoN.github.io/2014/05/31/android-development-studio-create-string-resource-automatically</id>
    <content type="html"><![CDATA[<p>I’ve just learned a new trick: selecting a hard-coded string in an Android xml file and pressing Ctrl+1 brings a context menu where one can select to Extract Android String. This would automatically append a string resource definition to values/strings.xml and replace a hard-coded string with an auto-generated name.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Product Ideas]]></title>
    <link href="http://OrKoN.github.io/2014/03/23/ideas/"/>
    <updated>2014-03-23T20:50:00+01:00</updated>
    <id>http://OrKoN.github.io/2014/03/23/ideas</id>
    <content type="html"><![CDATA[<ol>
  <li>
    <p>a JS tool to be embedded into websites which can monitor users’ actions (scroll, select, copy, paste etc.) and store them in a warehouse for further analysis</p>
  </li>
  <li>
    <p>a tool that can read (text to speech) websites and additionaly finds videos, images, music in the Internet and makes a movie clip on-fly to support the text being read</p>
  </li>
  <li>
    <p>a service which can detect polytical views of a website’s visitors</p>
  </li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Find Text Strings in PDF Files]]></title>
    <link href="http://OrKoN.github.io/2014/02/21/how-to-find-text-strings-in-pdf-files/"/>
    <updated>2014-02-21T20:00:00+01:00</updated>
    <id>http://OrKoN.github.io/2014/02/21/how-to-find-text-strings-in-pdf-files</id>
    <content type="html"><![CDATA[<p>I write my master thesis and I have a lot of literature sources which I store in a directory as PDF files. Today I needed to refer to one of the sources but I could not remember which one of them was actually supporting mine argument. I only remembered a couple of keywords from that source. So I was wondering if it’s possible to search for a string in a bunch of PDF files. And after spending some time googling, I found a neat command that does the work:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd folder-where-you-have-pdfs
</span><span class="line">find . -name '*.pdf' -exec sh -c 'pdftotext "{}" - | grep --with-filename --label="{}" --color "keyword"' \;</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Configure Git for the Android Project in Eclipse]]></title>
    <link href="http://OrKoN.github.io/2013/11/19/how-to-configure-git-for-the-android-project-in-eclipse/"/>
    <updated>2013-11-19T18:46:00+01:00</updated>
    <id>http://OrKoN.github.io/2013/11/19/how-to-configure-git-for-the-android-project-in-eclipse</id>
    <content type="html"><![CDATA[<p>I’ve started a new project for Android and I’ve chosen the IDE for Android development provided by Google. This IDE is based on Eclipse
and Android development plugin. I want to put the project under version control. In order to do this, I have to configure git properly.
And by properly I mean that I have to exclude metadata, binary files etc from the version control. Also I want to be sure that other people would be able to import the project and build it successfully. So I did the following:</p>

<ul>
  <li>created .gitignore file in the root folder of the project and put the following directories in it:
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span></figure></notextile></li>
</ul>
<p>&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class=""><span class="line">.metadata/*
</span><span class="line">.project
</span><span class="line">.classpath
</span><span class="line">.settings/*
</span><span class="line">bin/*
</span><span class="line">gen/*</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;
* tested that the project without these files and directories can be imported to Eclipse. One has to import the project using the “Existing Anrdoid Code Into Workspace” option of the Import wizard. After the project is imported, one can build it with 1 click.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Turn Your Web Browser Into Text Editor]]></title>
    <link href="http://OrKoN.github.io/2013/10/20/turn-your-web-browser-into-text-editor/"/>
    <updated>2013-10-20T19:53:00+02:00</updated>
    <id>http://OrKoN.github.io/2013/10/20/turn-your-web-browser-into-text-editor</id>
    <content type="html"><![CDATA[<p>There is a very simple way to turn your web browser into text editor. Just enter the following code snippet into browser’s address line
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span></span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class=""><span class="line">data:text/html, &lt;html contenteditable&gt;</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</figure></notextile>&lt;/div&gt;</p>

<p>You will see a blank page where you can write a text. You can save this page via browser’s standard Save dialog.</p>

<p>Additionally, you can use the following snipper to make the editor look nice:
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span></span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class=""><span class="line">data:text/html, &lt;style type="text/css"&gt;.e{position:absolute;top:0;right:0;bottom:0;left:0;}&lt;/style&gt;&lt;div class="e" id="editor"&gt;&lt;/div&gt;&lt;script src="http://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;&lt;script&gt;var e=ace.edit("editor");e.setTheme("ace/theme/monokai");e.getSession().setMode("ace/mode/php");&lt;/script&gt;</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</figure></notextile>&lt;/div&gt;</p>

<p>It uses Ace.js, an embeddable JS code editor. Thus, it’s different from the first code snippet because the first one is purely based on Html standard.</p>

<p>Hint: you can also create a bookmark for the page, so you’ll have a text editor always available in your browser.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moved My Blog to Octopress Engine]]></title>
    <link href="http://OrKoN.github.io/2013/10/20/moved-my-blog-to-octopress-engine/"/>
    <updated>2013-10-20T19:08:00+02:00</updated>
    <id>http://OrKoN.github.io/2013/10/20/moved-my-blog-to-octopress-engine</id>
    <content type="html"><![CDATA[<p>Decided to improved a look-and-feel of my blog. Therefore, I tried the Octopress blogging platform. What differs it from others is that it generates a static html/css/js website locally, and, thus, only the static files are uploaded to the server.</p>

<p>Old blog is still there: http://webzeropointzero.blogspot.com</p>
]]></content>
  </entry>
  
</feed>
